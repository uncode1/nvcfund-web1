openapi: 3.0.0
info:
  title: NVC Banking Platform - Mojoloop API
  description: |
    API for integrating with Mojoloop to enable real-time interoperable payments
    through the NVC Banking Platform.
  version: 1.0.0
  contact:
    name: NVC Banking Platform Support
    email: support@nvcbanking.com
servers:
  - url: '{serverUrl}'
    description: NVC Banking Platform API server
    variables:
      serverUrl:
        default: https://api.nvcbanking.com
        description: API server URL

paths:
  /api/mojoloop/health:
    get:
      summary: Check Mojoloop integration health
      description: Returns the health status of the Mojoloop API integration
      operationId: checkMojolloopHealth
      tags:
        - Health
      responses:
        '200':
          description: Successful health check
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
        '500':
          description: Service unavailable or error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/mojoloop/transactions:
    post:
      summary: Create a new Mojoloop transaction
      description: Creates a new transaction through the Mojoloop network for real-time interoperable payments
      operationId: createMojolloopTransaction
      tags:
        - Transactions
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
      responses:
        '201':
          description: Transaction created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/mojoloop/transactions/{transactionId}:
    get:
      summary: Get transaction status
      description: Retrieves the status and details of a Mojoloop transaction
      operationId: getMojolloopTransaction
      tags:
        - Transactions
      security:
        - bearerAuth: []
      parameters:
        - name: transactionId
          in: path
          required: true
          description: Transaction ID to check
          schema:
            type: string
      responses:
        '200':
          description: Transaction details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDetailsResponse'
        '401':
          description: Unauthorized
        '404':
          description: Transaction not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/mojoloop/callbacks/transfers:
    post:
      summary: Transfer callback endpoint
      description: Callback endpoint for receiving transfer status updates from Mojoloop
      operationId: transferCallback
      tags:
        - Callbacks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferCallback'
      responses:
        '200':
          description: Callback processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallbackResponse'
        '400':
          description: Invalid callback data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/mojoloop/callbacks/quotes:
    post:
      summary: Quote callback endpoint
      description: Callback endpoint for receiving quote notifications from Mojoloop
      operationId: quoteCallback
      tags:
        - Callbacks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuoteCallback'
      responses:
        '200':
          description: Callback processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallbackResponse'
        '400':
          description: Invalid callback data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/mojoloop/admin/transactions:
    get:
      summary: List Mojoloop transactions (admin only)
      description: Returns a list of Mojoloop transactions (requires admin access)
      operationId: listMojolloopTransactions
      tags:
        - Admin
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Transactions retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionListResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - admin access required
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    HealthResponse:
      type: object
      properties:
        status:
          type: string
          description: Health status of the service
          example: ok
        timestamp:
          type: string
          format: date-time
          description: Current timestamp
          example: '2025-05-20T01:25:30Z'
        service:
          type: string
          description: Service name
          example: Mojoloop API Integration
        version:
          type: string
          description: Service version
          example: 1.0.0
      required:
        - status
        - timestamp
        - service

    TransactionRequest:
      type: object
      properties:
        payer_identifier:
          type: string
          description: Identifier for the payer (phone number, IBAN, etc.)
          example: '+1234567890'
        payee_identifier:
          type: string
          description: Identifier for the payee (phone number, IBAN, etc.)
          example: '+9876543210'
        amount:
          type: number
          format: float
          description: Transaction amount
          example: 100.50
        currency:
          type: string
          description: Transaction currency code
          example: USD
        transaction_type:
          type: string
          description: Type of transaction
          enum: [transfer, payment]
          default: transfer
          example: transfer
        note:
          type: string
          description: Optional transaction note
          example: Payment for services
        transaction_id:
          type: string
          description: Optional client-defined transaction ID
          example: client-tx-001
      required:
        - payer_identifier
        - payee_identifier
        - amount
        - currency

    TransactionResponse:
      type: object
      properties:
        status:
          type: string
          enum: [success, error]
          example: success
        message:
          type: string
          example: Transaction created successfully
        data:
          type: object
          properties:
            transaction_id:
              type: string
              example: ML-c8e7a3d1-f9b4-4c63-9e8b-c5f7b9a1d2e3
            external_id:
              type: string
              example: 1a2b3c4d-5e6f-7g8h-9i0j-1k2l3m4n5o6p
            status:
              type: string
              enum: [PENDING, PROCESSING, COMPLETED, FAILED]
              example: PENDING
            amount:
              type: number
              format: float
              example: 100.50
            currency:
              type: string
              example: USD
            created_at:
              type: string
              format: date-time
              example: '2025-05-20T01:25:30Z'
            mojoloop_details:
              type: object
              description: Details from the Mojoloop network
      required:
        - status
        - data

    TransactionDetailsResponse:
      type: object
      properties:
        status:
          type: string
          enum: [success, error]
          example: success
        data:
          type: object
          properties:
            transaction_id:
              type: string
              example: ML-c8e7a3d1-f9b4-4c63-9e8b-c5f7b9a1d2e3
            external_id:
              type: string
              example: 1a2b3c4d-5e6f-7g8h-9i0j-1k2l3m4n5o6p
            status:
              type: string
              enum: [PENDING, PROCESSING, COMPLETED, FAILED]
              example: COMPLETED
            amount:
              type: number
              format: float
              example: 100.50
            currency:
              type: string
              example: USD
            created_at:
              type: string
              format: date-time
              example: '2025-05-20T01:25:30Z'
            updated_at:
              type: string
              format: date-time
              example: '2025-05-20T01:26:15Z'
            mojoloop_details:
              type: object
              description: Details from the Mojoloop network
      required:
        - status
        - data

    TransactionListResponse:
      type: object
      properties:
        status:
          type: string
          enum: [success, error]
          example: success
        count:
          type: integer
          description: Number of transactions returned
          example: 10
        data:
          type: array
          items:
            type: object
            properties:
              transaction_id:
                type: string
                example: ML-c8e7a3d1-f9b4-4c63-9e8b-c5f7b9a1d2e3
              external_id:
                type: string
                example: 1a2b3c4d-5e6f-7g8h-9i0j-1k2l3m4n5o6p
              amount:
                type: number
                format: float
                example: 100.50
              currency:
                type: string
                example: USD
              status:
                type: string
                enum: [PENDING, PROCESSING, COMPLETED, FAILED]
                example: COMPLETED
              created_at:
                type: string
                format: date-time
                example: '2025-05-20T01:25:30Z'
              updated_at:
                type: string
                format: date-time
                example: '2025-05-20T01:26:15Z'
      required:
        - status
        - count
        - data

    TransferCallback:
      type: object
      properties:
        transferId:
          type: string
          description: Mojoloop transfer ID
          example: 1a2b3c4d-5e6f-7g8h-9i0j-1k2l3m4n5o6p
        transferState:
          type: string
          description: Current state of the transfer
          enum: [RECEIVED, PENDING, ACCEPTED, REJECTED, COMMITTED, ABORTED]
          example: COMMITTED
        completedTimestamp:
          type: string
          format: date-time
          description: When the transfer was completed
          example: '2025-05-20T01:26:15Z'
      required:
        - transferId
        - transferState

    QuoteCallback:
      type: object
      properties:
        quoteId:
          type: string
          description: Mojoloop quote ID
          example: 6a7b8c9d-0e1f-2g3h-4i5j-6k7l8m9n0o1p
        transactionId:
          type: string
          description: Transaction ID associated with the quote
          example: 1a2b3c4d-5e6f-7g8h-9i0j-1k2l3m4n5o6p
        quoteState:
          type: string
          description: Current state of the quote
          example: ACCEPTED
        amount:
          type: object
          properties:
            amount:
              type: string
              example: "100.50"
            currency:
              type: string
              example: USD
      required:
        - quoteId
        - transactionId

    CallbackResponse:
      type: object
      properties:
        status:
          type: string
          enum: [success, error]
          example: success
        message:
          type: string
          example: Callback received and processed successfully
      required:
        - status
        - message

    ErrorResponse:
      type: object
      properties:
        status:
          type: string
          enum: [error]
          example: error
        message:
          type: string
          description: Error message
          example: Invalid transaction data provided
      required:
        - status
        - message

tags:
  - name: Health
    description: Operations for checking the health of the Mojoloop integration
  - name: Transactions
    description: Operations for creating and managing Mojoloop transactions
  - name: Callbacks
    description: Endpoints for receiving callbacks from the Mojoloop network
  - name: Admin
    description: Administrative operations (admin access required)